;; Testing basic bash interop
(let* ((a 1) ) a)
;=>1
(js* "7")
;=>7
(if (or (equal (nth 3 command-line-args) "bootstrap")
	(equal (nth 4 command-line-args) "bootstrap")
	;; FIXME this is irritatingly fragile.
	(equal (nth 4 command-line-args) "unidata-gen.el")
	(equal (nth 7 command-line-args) "unidata-gen-files")
	(if (fboundp 'dump-emacs)
	    (string-match "src/bootstrap-emacs" (nth 0 command-line-args))
	  t))
    (let ((dir (car load-path)))
      ;; We'll probably overflow the pure space.
      (setq purify-flag nil)
      (setq load-path (list (expand-file-name "." dir)
			    (expand-file-name "emacs-lisp" dir)
			    (expand-file-name "language" dir)
			    (expand-file-name "international" dir)
			    (expand-file-name "textmodes" dir)
			    (expand-file-name "vc" dir)))))
(eval top-level)

(js* "'7'")
;=>"7"

(js* "[7,8,9]")
;=>(7 8 9)

(js* "console.log('hello');")
; hello
;=>nil

(js* "foo=8;")
(js* "foo;")
;=>8

(js* "['a','b','c'].map(function(x){return 'X'+x+'Y'}).join(' ')")
;=>"XaY XbY XcY"

(js* "[1,2,3].map(function(x){return 1+x})")
;=>(2 3 4)
